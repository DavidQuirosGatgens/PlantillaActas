'++LotusScript Development Environment:2:5:(Options):0:74
%REM
	Library LibNotificaciones
	Created Nov 11, 2014 
	Description: Librería genérica para el envío de notificaciones
%END REM
Option Public
Option Declare

Use "LibDeclaracionesComunes"




'++LotusScript Development Environment:2:5:(Forward):0:1
Declare Sub Initialize
Declare Sub enviarCorreo(dbMail As NotesDatabase, mailSender As String, mailToArray As Variant, _
	mailToCCArray As Variant, mailToBccArray As Variant, mailTitle As String,_ 
	mailBody As NotesRichTextItem, attachments As NotesRichTextItem)
Declare Private Sub obTieneCorreoExterno(sendTo As Variant,Maildoc As NotesDocument, campo As String)
Declare Sub GenerarNotificacionConEtiquetas(mailTo As String, _
	mailToCC As String, mailToBcc As String, mailTitle As String, mailFrom As String,_ 
	mailBodyBuzon As NotesRichTextItem, attachments As NotesRichTextItem, _
	doc As NotesDocument, adjuntarEnlacesADoc As Boolean)
Declare Sub IdentificaEtiquetasAsignadasCuerpo(docNotificacion As NotesDocument, _
	mailBodyBuzon As NotesRichTextItem, doc As NotesDocument, adjuntarEnlaces As Boolean)
Declare Sub ReemplazaEtiquetasCuerpoMensaje(mailBodyBuzon As NotesRichTextItem, rtrange As NotesRichTextRange,_
	doc As NotesDocument)
Declare Sub IdentificaEtiquetasAsignadasAsunto(docNotificacion As NotesDocument, mailTitle As String, doc As NotesDocument)
Declare Public Function Elements(arr As Variant) As Integer
Declare Private Sub RegistrarError(errorMessage As String)
Declare Function fAppendItemValue( doc As NotesDocument, campo As String, valor As Variant) As NotesItem

'++LotusScript Development Environment:2:5:(Declarations):0:10




'++LotusScript Development Environment:2:2:Initialize:1:10
Sub Initialize
	
End Sub



'++LotusScript Development Environment:2:2:enviarCorreo:8:8
%REM
	Sub enviarCorreo
	Description: Rutina de envio de correo, con revisión de que cada usuario destinatario o copiado
	exista en el directorio de nombres. 
%END REM
Sub enviarCorreo(dbMail As NotesDatabase, mailSender As String, mailToArray As Variant, _
	mailToCCArray As Variant, mailToBccArray As Variant, mailTitle As String,_ 
	mailBody As NotesRichTextItem, attachments As NotesRichTextItem)

	On Error GoTo ErrorHandler

	Dim MailDoc As NotesDocument
	Dim rtitem As NotesRichTextItem, body As NotesRichTextItem
	Dim correos As Variant
	
		
	If dbMail.Isopen Then
		
		''' Se crea el documento para la notificación
		Set MailDoc= New NotesDocument( dbMail )
		MailDoc.Form="Memo"	

		REM "DETERMINAR EL ENVIADO POR"
		MailDoc.ReplyTo= mailSender
		MailDoc.From=   mailSender
		

		
		MailDoc.SendTo= mailToArray
		MailDoc.CopyTo= mailToCCArray
		MailDoc.BCC = mailToBccArray

		Dim RecipientsArray As Variant
		RecipientsArray= mailToArray
		
		If mailToCCArray<>"" Then
			RecipientsArray= AddArrayToArray(RecipientsArray, mailToCCArray)
		End If
		If mailToBccArray<>"" Then
			RecipientsArray= AddArrayToArray(RecipientsArray, mailToBccArray)
		End If
		
		MailDoc.Recipients = mailToArray
		MailDoc.Subject= mailTitle	
		MailDoc.PostedDate= MailDoc.Created
		MailDoc.Importance="1"
		MailDoc.ReturnReceipt = "1"
		
		Call MailDoc.Copyitem(mailBody, "Body")
		
		If Not attachments Is Nothing Then
			Call MailDoc.Copyitem(attachments, "Attachments")
		End If 
		

		'Envia el Correo
		Call MailDoc.ComputeWithForm( False, False )
		
		
		Call MailDoc.Save(True,False)
		
	Else
		MessageBox "No se ha podido obtener la base de datos para envío de la notificación"	
	End If
GETOUT:
	Exit Sub
	
ErrorHandler:
	MsgBox "Error #" & Err & " " & Error$ & " " & "Line #" & Erl & | in sub/function: "| & GetThreadInfo(1) & |"|	
	GoTo GETOUT	
End Sub


'++LotusScript Development Environment:2:2:obTieneCorreoExterno:1:8
Private Sub obTieneCorreoExterno(sendTo As Variant,Maildoc As NotesDocument, campo As String)
	Dim itemUser As NotesName
	Dim docUser As NotesDocument
	Dim vUsuarios As NotesView
	Set vUsuarios=db.Getview("(vUsuario_Common)")
	
	On Error GoTo GoError
	If IsArray(sendTo) Then
		ForAll user In sendTo
			Set itemUser =New NotesName(user)
			Set docUser=vUsuarios.Getdocumentbykey(itemUser.Canonical, True)
			If Not docUser Is Nothing Then
				Call fAppendItemValue(MailDoc, campo, docUser.correo(0))
			Else
				Call fAppendItemValue(MailDoc, campo, user)
			End If
		End ForAll
	Else
		Set itemUser =New NotesName(sendTo)
		Set docUser=vUsuarios.Getdocumentbykey(itemUser.Canonical, True)
		If Not docUser Is Nothing Then
			Call fAppendItemValue(MailDoc, campo, docUser.correo(0))
		Else
			Call fAppendItemValue(MailDoc, campo, sendTo)
		End If
	End If
	Exit Sub	
GoError:  
	MessageBox "Error (" & Err() & "): " & Error()  & " . En línea: " & Erl()

End Sub


'++LotusScript Development Environment:2:2:GenerarNotificacionConEtiquetas:11:8

%REM
	Sub GenerarNotificacionConEtiquetas
	Description: Prepara correo en respuesta automatica al correo que se recibe
	segun orden de gestión recibida
%END REM

Sub GenerarNotificacionConEtiquetas(mailTo As String, _
	mailToCC As String, mailToBcc As String, mailTitle As String, mailFrom As String,_ 
	mailBodyBuzon As NotesRichTextItem, attachments As NotesRichTextItem, _
	doc As NotesDocument, adjuntarEnlacesADoc As Boolean)
 
	On Error GoTo ErrorHandler
	

	Dim MailDoc As NotesDocument
	Dim rtitem As NotesRichTextItem, body As NotesRichTextItem
	Dim correos As Variant
	Dim usuarioVerificado As Boolean
	Dim usuarioAVerificar As String
	Dim nombreUsuarioVerificado As String
	
	
	' ************************************************************
	If dbMail.IsOpen Then
		''' Se crea el documento para la notificación
		Set MailDoc= New NotesDocument( dbMail )
		MailDoc.Form="Memo"	
	
		MailDoc.ReplyTo=  mailFrom
		MailDoc.From=   mailFrom
		'MailDoc.CopyTo= Split(mailToCC , SEPARADOR_MAILS)
		'MailDoc.BCC =  Split(mailToBcc, SEPARADOR_MAILS)
		'MailDoc.SendTo= Split(mailTo, SEPARADOR_MAILS)
		Call obTieneCorreoExterno(mailToCC, Maildoc, "CopyTo")
		Call obTieneCorreoExterno(mailToBcc, Maildoc, "BCC")
		Call obTieneCorreoExterno(mailTo, Maildoc, "SendTo")
		
		MailDoc.Recipients = MailDoc.SendTo  		
		
		MailDoc.PostedDate= MailDoc.Created
		MailDoc.Importance="1"
		REM MailDoc.ReturnReceipt = "1"
		
		Call IdentificaEtiquetasAsignadasAsunto(MailDoc,mailTitle, doc)
		
		Call IdentificaEtiquetasAsignadasCuerpo(MailDoc, mailBodyBuzon, doc, adjuntarEnlacesADoc)
			
		If Not attachments Is Nothing Then Call MailDoc.Copyitem(attachments, "Attachments")
		
		'Guarda correo
		Call MailDoc.ComputeWithForm( False, False )	
		Call MailDoc.Save(True,False)
		
	End If
	
GETOUT:
	Exit Sub
	
ErrorHandler:
	Call RegistrarError("Error #" & Err & " " & Error$ & " " & "Line #" & Erl & | in sub/function: "| & GetThreadInfo(1) & |"|)
	GoTo GETOUT
	
End Sub








'++LotusScript Development Environment:2:2:IdentificaEtiquetasAsignadasCuerpo:2:8
Sub IdentificaEtiquetasAsignadasCuerpo(docNotificacion As NotesDocument, _
	mailBodyBuzon As NotesRichTextItem, doc As NotesDocument, adjuntarEnlaces As Boolean)
	On Error GoTo ERRORHANDLER
	
	Dim rtnav As NotesRichTextNavigator
	Dim rtrange As NotesRichTextRange
	Dim totalParrafos As Long
	Dim xUrl As String

	'identifica cuantos parrafos tiene el mensaje
	'----------------------------------------------------------------
	Set rtnav = mailBodyBuzon.CreateNavigator
	Set rtrange = mailBodyBuzon.CreateRange  'delimita el parrafo
	totalParrafos=0
	If rtnav.FindFirstElement(RTELEM_TYPE_TEXTPARAGRAPH) Then				
		Do					
			Call rtrange.Setbegin(rtnav) 
			Call rtrange.Setend(rtnav)							
			totalParrafos=totalParrafos+1				
		Loop While rtnav.FindNextElement(RTELEM_TYPE_TEXTPARAGRAPH)
	End If
	
	'procesa cada parrafo
	'----------------------------------------------------------------	 			
	If rtnav.FindFirstElement(RTELEM_TYPE_TEXTPARAGRAPH) Then	
		
		Dim x, parrafoActual As Long

		parrafoActual=1
		
		While parrafoActual<=totalParrafos			
			If parrafoActual = 1 Then  'procesa el primera parrafo
				Call rtrange.Setbegin(rtnav) 
				Call rtrange.Setend(rtnav)		
				Call ReemplazaEtiquetasCuerpoMensaje(mailBodyBuzon, rtrange, doc)
			Else  
				'procesa los siguientes parrafos, por cada actualizacion del texto
				'se inicializa el objeto NAV, por lo que se debe estar iniciando en cada ronda para procesar
				'el parrafo que sigue 
				x=1	
				Set rtnav = mailBodyBuzon.CreateNavigator		
				While x <=parrafoActual
					If x=1 Then
						rtnav.FindFirstElement(RTELEM_TYPE_TEXTPARAGRAPH)
					Else
						rtnav.FindNextElement(RTELEM_TYPE_TEXTPARAGRAPH)
					End If
					x = x + 1
				Wend				
				Call rtrange.Setbegin(rtnav) 
				Call rtrange.Setend(rtnav)		
				Call ReemplazaEtiquetasCuerpoMensaje(mailBodyBuzon, rtrange, doc)
			End If 		
			parrafoActual = parrafoActual + 1
		Wend
		
	End If



	REM Se deshabilita, ya que los usuarios no tienen acceso al sistema, solo las secretarias de actas. 	
	REM  If adjuntarEnlaces Then	
 	If False then 	
		REM Agrega los enlaces a la aplicación
		Call mailBodyBuzon.Addnewline(3)
		'Call mailBodyBuzon.Appendtext("Ingrese al documento: ")
		'Call mailBodyBuzon.Appenddoclink(doc, "Ir al documento", "Ir al documento")
		Call mailBodyBuzon.Addnewline(1)
		Call mailBodyBuzon.Appendtext("Link al Documento: ")
		'Call mailBodyBuzon.Appendtext( getDocValueString(docPerfilGeneral, "URLBD") + _
		'"/0/" + doc.Universalid)
		Dim richStyle As NotesRichTextStyle
		Set richStyle = s.CreateRichTextStyle
		richStyle.PassThruHTML = True
		Call mailBodyBuzon.AppendStyle(richStyle)
		xUrl =  TraeParametro("URLBD") + "/0/" + CStr(doc.UniversalID) 
		Call mailBodyBuzon.AppendText(|<a href=| + xUrl + |>Link al documento</a>|)
		
	End If 	
	
	
	Call docNotificacion.Copyitem(mailBodyBuzon, "Body")
GETOUT:
	Exit Sub
	
ERRORHANDLER:
	Call RegistrarError("Error #" & Err & " " & Error$ & " " & "Line #" & Erl & | in sub/function: "| & GetThreadInfo(1) & |"|)
	GoTo GETOUT
End Sub





'++LotusScript Development Environment:2:2:ReemplazaEtiquetasCuerpoMensaje:2:8
Sub ReemplazaEtiquetasCuerpoMensaje(mailBodyBuzon As NotesRichTextItem, rtrange As NotesRichTextRange,_
	doc As NotesDocument)
	On Error GoTo ERRORHANDLER
		
	Dim parrafo, etiqueta, valor, letra, letraSig As String
	Dim posicion, posicionSig As Long
	Dim cierraEtiqueta As Integer
	Dim itemCampo As NotesItem
		
	parrafo = rtrange.Textparagraph		
	posicion=1
	While posicion<=Len(parrafo)
		letra = Mid(parrafo,posicion,1)
		letraSig = Mid(parrafo,posicion+1,1)
		etiqueta = ""
		valor =""
		If (letra="<" And letraSig="%") Then
			posicion = posicion + 2
			etiqueta = etiqueta + Mid(parrafo,posicion,1)			
			posicionSig = posicion+ 1
			cierraEtiqueta=0
			While posicionSig<Len(parrafo)And cierraEtiqueta<>1					
				letra = Mid(parrafo,posicionSig,1)
				letraSig = Mid(parrafo,posicionSig+1,1)
				If (letra="%" And letraSig=">") Then
					cierraEtiqueta = 1	
					%REM
					If docGestion.Hasitem(etiqueta)Then						
						Set itemCampo = docGestion.Getfirstitem(etiqueta)
						valor = itemCampo.Text								
					End If					
					%END REM
					valor = evaluateString(doc, etiqueta, "<%" + etiqueta+"%>")
					Call rtrange.Findandreplace("<%" + etiqueta + "%>", valor, 16)
					Set rtrange = mailBodyBuzon.CreateRange 'vuelve a cargar el parrafo con la data actualizada						
					parrafo = rtrange.Textparagraph											
									
				Else
					etiqueta = etiqueta + Mid(parrafo,posicionSig,1)
				End If					
				posicionSig = posicionSig + 1			
			Wend	
			posicion = posicionSig
		Else
			posicion = posicion + 1
		End If 	
	Wend
GETOUT:
	Exit Sub
	
ERRORHANDLER:
	Call RegistrarError("Error #" & Err & " " & Error$ & " " & "Line #" & Erl & | in sub/function: "| & GetThreadInfo(1) & |"|)
	GoTo GETOUT
End Sub 



'++LotusScript Development Environment:2:2:IdentificaEtiquetasAsignadasAsunto:1:8
Sub IdentificaEtiquetasAsignadasAsunto(docNotificacion As NotesDocument, mailTitle As String, doc As NotesDocument)

	
	Dim docActa As NotesDocument
	Dim docTema As NotesDocument
	Dim docAcuerdo As NotesDocument
	Dim docConEtiqueta As NotesDocument


	Dim asunto As String
	On Error GoTo ERRORHANDLER
	Dim etiqueta, valor, letra, letraSig As String
	Dim posicion, posicionSig As Long
	Dim cierraEtiqueta As Integer
	Dim itemCampo As NotesItem
	
	
	asunto = mailTitle		
	posicion=1
	While posicion<=Len(asunto)
		letra = Mid(asunto,posicion,1)
		letraSig = Mid(asunto,posicion+1,1)
		etiqueta = ""
		valor =""
		If (letra="<" And letraSig="%") Then
			posicion = posicion + 2
			etiqueta = etiqueta + Mid(asunto,posicion,1)			
			posicionSig = posicion+ 1
			cierraEtiqueta=0
			While posicionSig<Len(asunto)And cierraEtiqueta<>1					
				letra = Mid(asunto,posicionSig,1)
				letraSig = Mid(asunto,posicionSig+1,1)
				If (letra="%" And letraSig=">") Then
					cierraEtiqueta = 1					
%REM
					If docSeguimiento.Hasitem(etiqueta)Then						
						Set itemCampo = docSeguimiento.Getfirstitem(etiqueta)
						valor = itemCampo.Text							
					End If
%END REM
					valor = evaluateString(Doc, etiqueta, "<%" + etiqueta+"%>")		
					asunto = Replace(asunto,"<%"+etiqueta+"%>",valor)
											
				Else
					etiqueta = etiqueta + Mid(asunto,posicionSig,1)
				End If					
				posicionSig = posicionSig + 1			
			Wend	
			posicion = posicionSig
		Else
			posicion = posicion + 1
		End If 	
	Wend
	
	docNotificacion.Subject= asunto	
GETOUT:
	Exit Sub
	
ERRORHANDLER:
	Call RegistrarError("Error #" & Err & " " & Error$ & " " & "Line #" & Erl & | in sub/function: "| & GetThreadInfo(1) & |"|)
	GoTo GETOUT
	
	
End Sub

'++LotusScript Development Environment:2:1:Elements:1:8
Public Function Elements(arr As Variant) As Integer
	If IsArray(arr) Then
		Elements = UBound(arr) - LBound(arr) +1
	Else
		Elements = 0
	End If
End Function


'++LotusScript Development Environment:2:2:RegistrarError:2:8

Private Sub RegistrarError(errorMessage As String)
	MsgBox errorMessage , 16, "Error"
End Sub



'++LotusScript Development Environment:2:1:fAppendItemValue:1:8
Function fAppendItemValue( doc As NotesDocument, campo As String, valor As Variant) As NotesItem
	Dim item As NotesItem
	Dim nuevoValor As Integer
	Dim i As Integer
	Dim j As Integer
	
	On Error GoTo  ErrorHandler
	
	If doc Is Nothing Then Exit Function
	Set item = doc.GetFirstItem(campo)
	nuevoValor = False
	If item Is Nothing Then
		nuevoValor = True
	Else
		If TypeName(item.Values(0)) = "STRING" Then
			If item.Values(0) = "" Then
				nuevoValor = True
			End If
		End If		
	End If
	
	If nuevoValor Then
		Set item = doc.ReplaceItemValue(campo, valor)
	Else
		i = Elements(item.Values) 
		ReDim Preserve arrayCampo(i) 	
		For j = 0 To i - 1
			arrayCampo(j) = item.Values(j)			
		Next
		arrayCampo(i) = valor
		Set item = doc.ReplaceItemValue(campo, arrayCampo)
	End If
	Set fAppendItemValue = item
	
	Exit Function
ErrorHandler:

	Print 	"-> fAppendItemValue. Error:" & Err() & ". Linea:" & Erl() & ". "  &  Error()
	Exit Function
End Function

